/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2019-01-13 13:28:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board.solve;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import semi.board.solve.model.vo.*;
import semi.member.model.vo.*;

public final class solveBoardView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1547383146419L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("semi.member.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("semi.board.solve.model.vo");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
	Member loggedInMember = (Member)session.getAttribute("loggedInMember"); 

      out.write("\r\n");
      out.write("<!DOCTYPE>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>You Can't Escape..</title>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Roboto+Slab\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Amatic+SC\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Noto+Serif+KR\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/common/header.css\" />\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.3.1.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<div id=\"top\">\r\n");
      out.write("\t\t\t<div id=\"myMenu\">\r\n");
      out.write("\t\t\t");
if(loggedInMember == null) {
      out.write("\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/login\">LOGIN</a>\r\n");
      out.write("\t\t\t");
}else{ 
      out.write("\r\n");
      out.write("\t\t\t\t");
if("admin".equals(loggedInMember.getUserId())){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/adminBoard\">ADMIN</a>\r\n");
      out.write("\t\t\t\t\t&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/memberView?userId=");
      out.print(loggedInMember.getUserId());
      out.write("\">MY PAGE</a>\r\n");
      out.write("                \t&nbsp;&nbsp;\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/logout\">LOGOUT</a>\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/index.jsp\"><div id=\"logo\">Escape, if you can.</div></a>\r\n");
      out.write("\t\t<div id=\"menu\">\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/home\">HOME</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/notice/noticeList\">NOTICE</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/board/rank/rankingBoardList\">RANKING</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveBoardList\">SOLVE</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/board/free/freeBoardList\">FREE</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"game-start\">\r\n");
      out.write("\t\t\t<button class=\"enter-game\" >ENTER GAME</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t$(\".enter-game\").click(function(){\r\n");
      out.write("\t\tvar pop;\r\n");
      out.write("\t\tvar url = \"");
      out.print(request.getContextPath());
      out.write("/game/gameStart?userId=");
      out.print(loggedInMember!=null?loggedInMember.getUserId():"guest");
      out.write("\";\r\n");
      out.write("\t\tvar status = \"width=1024px, height=678px\";\r\n");
      out.write("\t\tpop = sessionStorage.getItem(\"game\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(pop || pop != null) {alert(\"이미 게임이 실행중입니다.\"); return;} //팝업창이 열려있는 경우 중복실행 방지.\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\tif(");
      out.print(loggedInMember==null);
      out.write("){\r\n");
      out.write("\t\t\tvar check = confirm(\"비로그인 시 랭킹등록이 불가합니다. 계속 진행하시겠습니까?\");\r\n");
      out.write("\t\t\tif(!check){return;}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tpop = open(url, \"game\", status);\r\n");
      out.write("\t\tsessionStorage.setItem(\"game\", pop);\r\n");
      out.write("\t});\r\n");
      out.write("\t</script>");
      out.write('\r');
      out.write('\n');

   SolveBoard sb = (SolveBoard)request.getAttribute("sb");
   List<BoardComment> commentList = (List<BoardComment>)request.getAttribute("commentList");
   List<BoardComment> bestCommentList = (List<BoardComment>)request.getAttribute("bestCommentList");
   

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/css/board/solve/boardCommunityView.css\" />\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.3.1.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>공략게시판</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("        <h3 style=\"color: white\">공략게시판</h3>\r\n");
      out.write("    <!--new pic-->\r\n");
      out.write("    <hr style=\"margin-bottom: 36px;\">\r\n");
      out.write("   \r\n");
      out.write("   <table class=\"sub_news\" border=\"1\" cellspacing=\"0\" summary=\"게시판의 글제목리스트\">\r\n");
      out.write("        <caption>게시판리스트</caption>\r\n");
      out.write("        <colgroup>\r\n");
      out.write("            <col width=\"30px\">\r\n");
      out.write("            <col width=\"100px\">\r\n");
      out.write("            <col width=\"30px\">\r\n");
      out.write("            <col width=\"30px\">\r\n");
      out.write("            <col width=\"30px\">\r\n");
      out.write("            <col width=\"30px\">\r\n");
      out.write("        </colgroup>\r\n");
      out.write("        \r\n");
      out.write("            <tr>\r\n");
      out.write("                <th scope=\"col\">제목</th>\r\n");
      out.write("                <td class=\"title\">\r\n");
      out.write("                       ");
      out.print(sb.getPostTitle() );
      out.write("\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th scope=\"col\">글쓴이</th>\r\n");
      out.write("                <td class=\"writer\">\r\n");
      out.write("                       ");
      out.print(sb.getPostWriter() );
      out.write("\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th scope=\"col\">내용</th>\r\n");
      out.write("                <td class=\"content\" style=\"height: 500px;\">\r\n");
      out.write("                       ");
if(sb.getPostRenamedFile()!=null){ 
      out.write("\r\n");
      out.write("                       \t\t<img src='");
      out.print(request.getContextPath());
      out.write("/upload/solveBoard/");
      out.print(sb.getPostRenamedFile() );
      out.write("' class=\"contentPhoto\" alt=\"지원하지 않는 사진 입니다.\"  />\r\n");
      out.write("                       \t\t<br />\r\n");
      out.write("                       \t\t<br />\r\n");
      out.write("                       \t\t<br />\r\n");
      out.write("                       \t\t");
      out.print(sb.getPostContent() );
      out.write("\r\n");
      out.write("                       ");
} else {
      out.write("\r\n");
      out.write("                       ");
      out.print(sb.getPostContent() );
      out.write("\r\n");
      out.write("                       ");
} 
      out.write("\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"declaration\">\r\n");
      out.write("        \r\n");
      out.write("    <i onclick=\"Postreport('");
      out.print(sb.getPostNo());
      out.write("');\">신고하기</i>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"opinion\">\r\n");
      out.write("        <div id=\"good\">\r\n");
      out.write("            <b><span id=\"like\">");
      out.print(sb.getPostLike());
      out.write("</span></b>\r\n");
      out.write("            <img src='");
      out.print(request.getContextPath());
      out.write("/images/freeBoard/like.png' onclick=\"likey('");
      out.print(sb.getPostLike());
      out.write("')\">\r\n");
      out.write("            <span id=\"likeComment\">추천</span>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div id=\"bad\">\r\n");
      out.write("           <b><span id=\"dislike\">");
      out.print(sb.getPostDislike());
      out.write("</span></b>\r\n");
      out.write("            <img src='");
      out.print(request.getContextPath());
      out.write("/images/freeBoard/dislike.png' onclick=\"disLikey('");
      out.print(sb.getPostDislike());
      out.write("')\">\r\n");
      out.write("            <span id=\"dislikeComment\">비추천</span>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"bestComment-container\">\r\n");
      out.write("    <hr>\r\n");
      out.write("    ");
for(BoardComment bc:bestCommentList)
                    if(bc.getCommentLevel()==1) {
                   
      out.write("\r\n");
      out.write("        <dl style=\"margin-left: 24px; height: 172px;\" >\r\n");
      out.write("            <d style=\"color:red;\">BEST</d>\r\n");
      out.write("            <dt>\r\n");
      out.write("                ");
      out.print(bc.getCommentWriter() );
      out.write("\r\n");
      out.write("                <i>");
      out.print(bc.getCommentDate() );
      out.write("</i>\r\n");
      out.write("            </dt>\r\n");
      out.write("             ");
if(loggedInMember!= null && ("admin".equals(loggedInMember.getUserId()) ||  bc.getCommentWriter().equals(loggedInMember.getUserId()))) {
      out.write("\r\n");
      out.write("            <dl class=\"bestEdit\">\r\n");
      out.write("                <div class=\"button\" style=\"position:relative; top:10px;\" >수정하기</div>\r\n");
      out.write("                <div class=\"button\"  style=\"position:relative; top:10px;\" >삭제하기</div>\r\n");
      out.write("            </dl>\r\n");
      out.write("            ");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <dl class=\"bestCommentOpinion\" style=\"position:relative; top:-44px; left:-33px;\">\r\n");
      out.write("                <span style=\"padding:10px\" class=\"bestCommentLike\">추천");
      out.print(bc.getCommentLike() );
      out.write("</span>\r\n");
      out.write("                <span style=\"padding:10px\" class=\"bestCommentDisike\">비추천");
      out.print(bc.getCommentDislike() );
      out.write("</span>\r\n");
      out.write("                <span style=\"padding:10px\" onclick=\"report('");
      out.print(bc.getCommentNo());
      out.write("');\">신고하기</span>\r\n");
      out.write("            </dl>\r\n");
      out.write("\r\n");
      out.write("            <dd class=\"bestContent\">\r\n");
      out.write("                   ");
      out.print(bc.getCommentContent() );
      out.write("\r\n");
      out.write("            </dd>\r\n");
      out.write("        </dl>\r\n");
      out.write("       <hr>\r\n");
      out.write("        ");
} 
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"comment-container\" style=\"color:white;\">\r\n");
      out.write("        <p>\r\n");
      out.write("            <span style=\"color: red; font-size:29px;\" >");
      out.print(sb.getBoard_comment_cnt());
      out.write("</span>개의 댓글\r\n");
      out.write("        </p>\r\n");
      out.write("            <div class=\"comment-editor\">\r\n");
      out.write("                   댓글쓰기\r\n");
      out.write("                <hr>\r\n");
      out.write("                <!-- 댓글 삽입 서블릿을 위한 폼 -->\r\n");
      out.write("                <form action=\"");
      out.print(request.getContextPath() );
      out.write("/board/solve/solveBoardCommentInsert\" name=\"commentSubmitFrm\">\r\n");
      out.write("                <input type=\"hidden\" name=\"ref\" value=\"");
      out.print(sb.getPostNo() );
      out.write("\" />\r\n");
      out.write("                <input type=\"hidden\" name=\"userId\" value=\"");
      out.print(loggedInMember.getUserId());
      out.write("\"/>\r\n");
      out.write("                <input type=\"hidden\" name=\"commentLevel\" value=\"1\" />\r\n");
      out.write("                <input type=\"hidden\" name=\"commentRef\" value=\"0\" />\r\n");
      out.write("                <!-- <input type=\"checkBox\" name=\"secret\"/><label for=\"secret\">비밀글</label> -->\r\n");
      out.write("                <textarea name=\"boardCommentContent\" cols=\"60\" rows=\"3\" style=\"margin: 11px;margin-bottom: -78px;width: 800px;height: 113px;resize:none;\"></textarea>\r\n");
      out.write("                </form>\r\n");
      out.write("                <div class=\"commentSubmit\" onclick=\"insertComment();\" style=\"cursor: pointer;\">등록</div>\r\n");
      out.write("               \r\n");
      out.write("            </div><!-- end of . comment-editor -->\r\n");
      out.write("            \r\n");
      out.write("            <!-- 댓글 목록 테이블 -->\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"commentList\">\r\n");
      out.write("                <hr>\r\n");
      out.write("                ");
for(int i=0; i<commentList.size(); i++){
                   BoardComment bc = commentList.get(i);
                   
                    if(bc.getCommentLevel()==1) {
                   
      out.write("\r\n");
      out.write("                 <dl class=\"comment-Area\">\r\n");
      out.write("                    <dt class=\"commentWriter\">\r\n");
      out.write("                        ");
      out.print(bc.getCommentWriter());
      out.write("\r\n");
      out.write("                        <i>");
      out.print(bc.getCommentDate() );
      out.write("</i>\r\n");
      out.write("                    </dt>\r\n");
      out.write("                    \r\n");
      out.write("                   <dl style=\"display: inline-flex; position: relative; left: 177px; top: -46px;\">\r\n");
      out.write("                        <input type=\"hidden\" value=");
      out.print(bc.getCommentNo() );
      out.write(" class=\"commentNo\" commentNum=\"");
      out.print(i);
      out.write("\" />\r\n");
      out.write("                        <input type=\"hidden\" value=");
      out.print(bc.getCommentContent() );
      out.write(" id=\"commentContent\"  no=\"");
      out.print(i );
      out.write("\"/>\r\n");
      out.write("                        ");
if(loggedInMember!= null && ("admin".equals(loggedInMember.getUserId()) ||  bc.getCommentWriter().equals(loggedInMember.getUserId()))) {
      out.write("\r\n");
      out.write("                        <div class=\"commentUpdate\" no=\"");
      out.print(i);
      out.write("\">수정하기</div>\r\n");
      out.write("                        <div class=\"commentUpdateEnd\" no=\"");
      out.print(i );
      out.write("\">수정완료</div>\r\n");
      out.write("                        <div class=\"commentDeleteBtn\" no=\"");
      out.print(i );
      out.write("\" onclick=\"deleteComment();\">삭제하기</div>\r\n");
      out.write("                        ");
} 
      out.write("\r\n");
      out.write("                 </dl>\r\n");
      out.write("                 \r\n");
      out.write("                 <!-- 댓글 삭제를 위한 폼 -->\r\n");
      out.write("                    <form action=\"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveBoardCommentDelete\" name=\"commentDeleteFrm\">\r\n");
      out.write("                    <input type=\"hidden\" value=\"");
      out.print(bc.getCommentNo() );
      out.write("\" name=\"commentNo\" class=\"commentNo\" commentNo=\"");
      out.print(i);
      out.write("\"/>\r\n");
      out.write("                    <input type=\"hidden\" value=\"");
      out.print(sb.getPostNo() );
      out.write("\" name=\"postNo\" id=\"postNo\"/>\r\n");
      out.write("                    </form>\r\n");
      out.write("                    \r\n");
      out.write("                 \r\n");
      out.write("                    <dl class=\"bestCommentOpinion\">\r\n");
      out.write("                            <dl class=\"CommentOpinion\">\r\n");
      out.write("                                \t추천    \r\n");
      out.write("                                \t<input type=\"hidden\" class=\"commentLikeAmount\" value=\"");
      out.print(bc.getCommentLike());
      out.write("\" commentNum=\"");
      out.print(i);
      out.write("\"/>\r\n");
      out.write("                                    <span style=\"padding:10px\" class=\"comment1Like\" commentNum=\"");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(bc.getCommentLike());
      out.write("</span>\r\n");
      out.write("                       \t\t\t\t비추천\r\n");
      out.write("                       \t\t\t\t<input type=\"hidden\" class=\"commentDisAmount\" value=\"");
      out.print(bc.getCommentDislike());
      out.write("\" commentNum=\"");
      out.print(i);
      out.write("\"/>\r\n");
      out.write("                                    <span style=\"padding:10px\" class=\"comment1Dislike\" commentNum=\"");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(bc.getCommentDislike());
      out.write("</span>\r\n");
      out.write("                                    <span style=\"padding:10px\" onclick=\"report('");
      out.print(bc.getCommentNo());
      out.write("');\">신고하기</span>        \r\n");
      out.write("                            </dl>\r\n");
      out.write("                    </dl>\r\n");
      out.write("        \r\n");
      out.write("                    <dd class=\"comment_\">\r\n");
      out.write("                    <textarea name=\"comment-Update\" no=\"");
      out.print(i);
      out.write("\" class=\"comment-Update\" cols=\"60\" rows=\"3\">");
      out.print(bc.getCommentContent() );
      out.write("</textarea>\r\n");
      out.write("                    <dd class=\"comment-Content\">\r\n");
      out.write("                            ");
      out.print(bc.getCommentContent() );
      out.write("\r\n");
      out.write("                    </dd>\r\n");
      out.write("                    \r\n");
      out.write("                   \r\n");
      out.write("                    <span class=\"level2CommentWrite\" level2No=\"");
      out.print(i);
      out.write("\">답글보기</span>       \r\n");
      out.write("           </div> \r\n");
      out.write("        \r\n");
      out.write("             <div class=\"level2CommentWriteDiv\" level2No=\"");
      out.print(i);
      out.write("\">\r\n");
      out.write("                   <textarea class=\"level2CommentWrite-textArea\" cols=\"60\" rows=\"3\"  level2No=\"");
      out.print(i);
      out.write("\"></textarea>\r\n");
      out.write("                    <input type=\"hidden\" name=\"commentRef\"  class=\"commentRef\" level2No=\"");
      out.print(i);
      out.write("\" value=\"");
      out.print(bc.getCommentNo());
      out.write("\"/>\r\n");
      out.write("                    <div class=\"level2Commentsubmit\" level2No=\"");
      out.print(i);
      out.write("\">등록</div>\r\n");
      out.write("              </div> \r\n");
      out.write("              \r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("               <div class=\"level2\" level2No=\"");
      out.print(i);
      out.write("\">\r\n");
      out.write("                  \r\n");
      out.write("               <input type=\"hidden\" name=\"ref\" value=\"");
      out.print(bc.getCommentNo() );
      out.write("\" /> \r\n");
      out.write("                  \r\n");
      out.write("               </div><!--level2 div 끝  -->\r\n");
      out.write("              <hr />  \r\n");
      out.write("         ");
}
      out.write(" \r\n");
      out.write("          ");
 } 
      out.write("   \r\n");
      out.write("               \r\n");
      out.write("          \r\n");
      out.write("               \r\n");
      out.write("               \r\n");
      out.write("               \r\n");
      out.write("               </div><!-- level2CommentListDiv 끝 -->\r\n");
      out.write("             </dl>\r\n");
      out.write("        </div> <!-- end of . comment-container -->\r\n");
      out.write("   ");
if(loggedInMember!= null && ("admin".equals(loggedInMember.getUserId()) ||  sb.getPostWriter().equals(loggedInMember.getUserId()))) {
      out.write("\r\n");
      out.write("        <div class=\"button\" id=\"update\" onclick=\"updateBoard();\">수정</div>\r\n");
      out.write("        <div class=\"button\" id=\"delete\" onclick=\"deleteBoard();\">삭제</div>     \r\n");
      out.write("    ");
} 
      out.write("\r\n");
      out.write("        <div class=\"button\" id=\"goList\" onclick=\"goList();\">목록</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<form action=\"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveBoardDelete\" name=\"boardDelFrm\" method=\"post\">\r\n");
      out.write("<input type=\"hidden\" name=\"postNo\" value=\"");
      out.print(sb.getPostNo());
      out.write("\" id=\"postNo\"/>\r\n");
      out.write("<input type=\"hidden\" name=\"rName\" value=\"");
      out.print(sb.getPostRenamedFile());
      out.write("\" />\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("/* 목록  */\r\n");
      out.write(" function goList(){\r\n");
      out.write("\t var referrer =  document.referrer;\r\n");
      out.write("\t location.href = referrer; \r\n");
      out.write("}\r\n");
      out.write("/* 글 수정 */\r\n");
      out.write("   function updateBoard(){\r\n");
      out.write("      location.href=\"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveBoardUpdate?postNo=");
      out.print(sb.getPostNo());
      out.write("\";   \r\n");
      out.write("   }\r\n");
      out.write("/* 글 삭제 */  \r\n");
      out.write("   function deleteBoard(){\r\n");
      out.write("      if(!confirm(\"정말 게시글을 삭제하시겠습니까?\")){\r\n");
      out.write("         return;\r\n");
      out.write("      }\r\n");
      out.write("      $(\"[name=boardDelFrm]\").submit();\r\n");
      out.write("   }\r\n");
      out.write("   function insertComment(){\r\n");
      out.write("      $(\"[name=commentSubmitFrm]\").submit();\r\n");
      out.write("   }\r\n");
      out.write("   /* 수정하기 버튼을 눌렀을 시 */\r\n");
      out.write("    $(\".commentUpdate\").on(\"click\", function(){\r\n");
      out.write("       \r\n");
      out.write("       var no = $(this).attr(\"no\");\r\n");
      out.write("       console.log(\"no=\"+no);\r\n");
      out.write("       console.log($(\"textarea[no=\"+no+\"]\")); \r\n");
      out.write("       \r\n");
      out.write("       $(\".comment-Content[no=\"+no+\"]\").hide();  //원래댓글\r\n");
      out.write("       $(\".comment-Update[no=\"+no+\"]\").css(\"display\",\"inline\"); //수정하기위한 text area\r\n");
      out.write("       $(\".commentUpdateEnd[no=\"+no+\"]\").css(\"display\",\"inline\"); //수정완료 버튼\r\n");
      out.write("   \r\n");
      out.write("      \r\n");
      out.write("        $(\".commentUpdate[no=\"+no+\"]\").css(\"display\",\"none\"); //수정하기 버튼\r\n");
      out.write("        $(\".commentDeleteBtn[no=\"+no+\"]\").css(\"display\",\"none\"); //삭제하기 버튼\r\n");
      out.write("        $(\"#level2CommentList\").css(\"display\",\"none\"); //답글보기 버튼\r\n");
      out.write("        $(\"#level2CommentWrite\").css(\"display\",\"none\"); //답글쓰기 버튼\r\n");
      out.write("    });    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    $(\".level2CommentWrite\").on(\"click\", function(){\r\n");
      out.write("       \r\n");
      out.write("       var no = $(this).attr(\"level2No\");\r\n");
      out.write("       var level2Comment = $(\".level2CommentWrite-textArea[level2No=\"+no+\"]\").val();\r\n");
      out.write("       var ref = $(\"input[name=ref]\").val(); //해당 글번호\r\n");
      out.write("       var commentRef = $(\".level2 input\").val() //대댓글의 해당 댓글번호 \r\n");
      out.write("       console.log(\"여기는 답글쓰기를 눌렀을 시 commentRef=\"+commentRef);\r\n");
      out.write("       var commentWriter = $(\"input[name=userId]\").val(); //유저아이디\r\n");
      out.write("       var commentLevel = 2; //대댓글\r\n");
      out.write("       $(\".level2CommentWriteDiv[level2No=\"+no+\"]\").css(\"display\",\"inline\");\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("       \r\n");
      out.write("    \r\n");
      out.write("         $.ajax({\r\n");
      out.write("          url:\"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveBoardComment2.do\",\r\n");
      out.write("           data:{level2Comment:level2Comment, ref:ref, commentRef:commentRef, commentWriter:commentWriter,  commentLevel:commentLevel},\r\n");
      out.write("           success:function(data){\r\n");
      out.write("           \r\n");
      out.write("              console.log(data);\r\n");
      out.write("              \r\n");
      out.write("              var div = $(\"<div class='level2_area' level2No='\"+no+\"'><div>\");\r\n");
      out.write("              for(var i=0; i<data.length; i++){\r\n");
      out.write("                 var user = data[i]; \r\n");
      out.write("                 var html = \"<hr />\"\r\n");
      out.write("                 html+=\r\n");
      out.write("                 \"<span class='reply_icon'><img src='");
      out.print(request.getContextPath());
      out.write("/images/freeBoard/commentReply.png'></span>\";\r\n");
      out.write("                  html+=\"<div class='info'>\"+ user.commentWriter + \"</div>\";\r\n");
      out.write("                  html+=\"<div class='level2Comment'>\"+ user.commentContent + \"</div>\";\r\n");
      out.write("                  html+=\"<div class='level2Date'>\"+ user.commentDate + \"</div>\";\r\n");
      out.write("                  html+=\"<div class='level2Report' onclick='report(\"+user.commentNo+\")'>신고하기</div>\";                               \r\n");
      out.write("\t\t\t\t  html+=\"<div class='level2Like' onmouseover='level2Like(\"+user.commentNo+\",\"+user.commentLike+\");' no='\"+i+\"' clickNum=0>추천 \"+user.commentLike+\"</div>\";\r\n");
      out.write(" \t\t\t\t  /* html+=\"<div class='level2Like' no=\"+i+\">추천\"+user.commentLike+\"</div>\"; */\r\n");
      out.write("                  html+=\"<div class='level2Dislike' onmouseover='level2Dislike(\"+user.commentNo+\",\"+user.commentDislike+\");' no=\"+i+\">비추천 \"+user.commentDislike+\"</div>\";\r\n");
      out.write("               \r\n");
      out.write("                  div.append(html);\r\n");
      out.write("               \r\n");
      out.write("            \r\n");
      out.write("              }\r\n");
      out.write("              $(\".level2[level2No=\"+no+\"]\").html(div);\r\n");
      out.write("             \r\n");
      out.write("              \r\n");
      out.write("           }\r\n");
      out.write("       }); \r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $(\".level2Commentsubmit\").on(\"click\", function(){\r\n");
      out.write("       var no = $(this).attr(\"level2No\");\r\n");
      out.write("       var level2Comment = $(\".level2CommentWrite-textArea[level2No=\"+no+\"]\").val();\r\n");
      out.write("       var ref = $(\"input[name=ref]\").val(); //해당 글번호refForSubmit\r\n");
      out.write("       var commentWriter = $(\"input[name=userId]\").val(); //유저아이디\r\n");
      out.write("       var commentLevel = 2; //대댓글\r\n");
      out.write("       var commentRef = $(\".commentRef[level2No=\"+no+\"]\").val();\r\n");
      out.write("       var len = level2Comment.trim();\r\n");
      out.write("       if(len.length==0){\r\n");
      out.write("          alert(\"댓글은 1자 이상 입력해주셔야합니다.\");\r\n");
      out.write("          return;\r\n");
      out.write("       }\r\n");
      out.write("       \r\n");
      out.write("  \r\n");
      out.write("   \t $.ajax({\r\n");
      out.write("      url:\"");
      out.print(request.getContextPath());
      out.write("/board/solve/CommentLevel2Insert.do\",\r\n");
      out.write("         data:{level2Comment:level2Comment, ref:ref, commentRef:commentRef, commentWriter:commentWriter,  commentLevel:commentLevel},\r\n");
      out.write("         success:function(data){\r\n");
      out.write("         \r\n");
      out.write("            console.log(data);\r\n");
      out.write("            /* userId/2019-01-09 14:00:22/대댓글테스트2 */\r\n");
      out.write("               var data_split = data.split(\"/\");\r\n");
      out.write("               var userId = data_split[0];\r\n");
      out.write("               var commentDate = data_split[1];\r\n");
      out.write("               var commentContent=data_split[2];\r\n");
      out.write("               var commentLike=data_split[3];\r\n");
      out.write("               var commentDislike=data_split[4];\r\n");
      out.write("               var commentNo = data_split[5];\r\n");
      out.write("\r\n");
      out.write("               \r\n");
      out.write("               var div = $(\"<div class='level2_area'><div>\");\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("               \r\n");
      out.write("               var html = \"<hr />\";\r\n");
      out.write("                html+=\r\n");
      out.write("               \"<span class='reply_icon'><img src='");
      out.print(request.getContextPath());
      out.write("/images/freeBoard/commentReply.png'></span>\";\r\n");
      out.write("                html+=\"<div class='info'>\"+ userId + \"</div>\";\r\n");
      out.write("                html+=\"<div class='level2Comment'>\"+ commentContent + \"</div>\";\r\n");
      out.write("                html+=\"<div class='level2Date'>\"+ commentDate + \"</div>\";\r\n");
      out.write("                html+=\"<div class='level2Report'>신고하기</div>\";\r\n");
      out.write("                html+=\"<div class='level2Like'>추천 \"+ commentLike + \"</div>\";\r\n");
      out.write("                html+=\"<div class='level2Dislike'>비추천 \"+ commentDislike + \"</div>\";\r\n");
      out.write("               \r\n");
      out.write("            \tdiv.append(html);\r\n");
      out.write("               \r\n");
      out.write("            \r\n");
      out.write("            $(\".level2[level2No=\"+no+\"]\").append(div); \r\n");
      out.write("            \r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("         \r\n");
      out.write("      });  \r\n");
      out.write("       \r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    /* 수정완료버튼을 눌렀을 시 */\r\n");
      out.write("    $(\".commentUpdateEnd\").on(\"click\", function(){\r\n");
      out.write("    \t  var no = $(this).attr(\"no\");\r\n");
      out.write("    \t  var commentUpdate = $(\".comment-Update[no=\"+no+\"]\").val();\r\n");
      out.write("    \t  var commentNo = $(\".commentNo[commentNum=\"+no+\"]\").val();\r\n");
      out.write("    \t  var ref = $(\"[name=ref]\").val();\r\n");
      out.write("    \t  \r\n");
      out.write("\t\t  location.href = \"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveBoardCommentUpdate?commentUpdate=\"+commentUpdate+\r\n");
      out.write("\t\t\t\t  \"&commentNo=\"+commentNo+\"&ref=\"+ref;\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    function deleteComment(){\r\n");
      out.write("        if(!confirm(\"댓글을 정말로 삭제하시겠습니까?\")){\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        $(\"[name=commentDeleteFrm]\").submit();\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write(" /* 댓글추천  */\r\n");
      out.write(" \t$(\".comment1Like\").on(\"click\", function(){\r\n");
      out.write(" \t\t var no = $(this).attr(\"commentNum\");\r\n");
      out.write(" \t     var commentLikeAmount = $(\".commentLikeAmount[commentNum=\"+no+\"]\").val();\r\n");
      out.write(" \t     var commentNo = $(\".commentNo[commentNum=\"+no+\"]\").val();\r\n");
      out.write(" \t     var userId = $(\"[name=userId]\").val();\r\n");
      out.write(" \r\n");
      out.write(" \t\t\t\r\n");
      out.write(" \t    if(!confirm(\"해당 댓글을 추천하시겠습니까?\")){\r\n");
      out.write(" \t          return;\r\n");
      out.write(" \t       } \r\n");
      out.write(" \t    \r\n");
      out.write("\t   if(userId==\"");
      out.print(loggedInMember.getUserId());
      out.write("\"){\r\n");
      out.write(" \t\t   alert(\"자신의 댓글에는 추천하실 수 없습니다.\");\r\n");
      out.write(" \t\t   return;\r\n");
      out.write(" \t   }\r\n");
      out.write(" \t       \r\n");
      out.write(" \t        $.ajax({\r\n");
      out.write(" \t           url:\"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveBoardComment1Like.do\",\r\n");
      out.write(" \t           data:{commentNo:commentNo, commentLikeAmount:commentLikeAmount},\r\n");
      out.write(" \t           success:function(data){\r\n");
      out.write(" \t              $(\".comment1Like[commentNum=\"+no+\"]\").html(data);\r\n");
      out.write(" \t           }\r\n");
      out.write(" \t           \r\n");
      out.write(" \t        });\r\n");
      out.write(" \t});\r\n");
      out.write(" \t/* 댓글비추천  */\r\n");
      out.write("\t$(\".comment1Dislike\").on(\"click\", function(){\r\n");
      out.write("\t\t var no = $(this).attr(\"commentNum\");\r\n");
      out.write("\t     var commentDislikeAmount = $(\".commentDisAmount[commentNum=\"+no+\"]\").val();\r\n");
      out.write("\t     var commentNo = $(\".commentNo[commentNum=\"+no+\"]\").val();\r\n");
      out.write("\t     var userId = $(\"[name=userId]\").val();\r\n");
      out.write("\t     \r\n");
      out.write("\t    if(!confirm(\"해당 댓글을 비추천하시겠습니까?\")){\r\n");
      out.write("\t          return;\r\n");
      out.write("\t    }\r\n");
      out.write("\t    \r\n");
      out.write("\t    if(userId==\"");
      out.print(loggedInMember.getUserId());
      out.write("\"){\r\n");
      out.write("\t \t\t   alert(\"자신의 댓글에는 추천하실 수 없습니다.\");\r\n");
      out.write("\t \t\t   return;\r\n");
      out.write("\t \t}\r\n");
      out.write("\t        \r\n");
      out.write("\t    $.ajax({\r\n");
      out.write("\t           url:\"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveBoardComment1Dislike.do\",\r\n");
      out.write("\t           data:{commentNo:commentNo, commentDislikeAmount:commentDislikeAmount},\r\n");
      out.write("\t           success:function(data){\r\n");
      out.write("\t             \tconsole.log(data);\r\n");
      out.write("\t        \t   $(\".comment1Dislike[commentNum=\"+no+\"]\").html(data);\r\n");
      out.write("\t           }\r\n");
      out.write("\t           \r\n");
      out.write("\t    });\r\n");
      out.write("\t});\r\n");
      out.write(" \t\r\n");
      out.write("\t  /*댓글 신고하기*/\r\n");
      out.write("    function report(item){\r\n");
      out.write("    \tvar commentNo = item;\r\n");
      out.write("    \tconsole.log(\"신고하기 버튼\"+item);\r\n");
      out.write("        var url = \"");
      out.print(request.getContextPath() );
      out.write("/board/solve/solveBoardCommentReport?commentNo=\"+commentNo;\r\n");
      out.write("    \t   \r\n");
      out.write("    \t   // 팝업창 이름\r\n");
      out.write("        var title = \"Report\";\r\n");
      out.write("    \tvar status = \"left=500px, top=200px, width=600px, height=600px\";\r\n");
      out.write("    \t   \r\n");
      out.write("    \topen(url, title, status);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\t  /* 게시글 신고 */\r\n");
      out.write("\t  function Postreport(item){\r\n");
      out.write("\t\t  var postNo = item;\r\n");
      out.write("\t\t  console.log(\"postNo=\"+postNo);\r\n");
      out.write("\t\t  var url = \"");
      out.print(request.getContextPath() );
      out.write("/board/solve/solveBoardPostReport?postNo=\"+postNo;\r\n");
      out.write("\t      var title = \"Report\";\r\n");
      out.write("\t      var status = \"left=500px, top=200px, width=600px, height=600px\";\r\n");
      out.write("\t    \t   \r\n");
      out.write("\t      open(url, title, status);\r\n");
      out.write("\t  }\r\n");
      out.write(" \t/* 대댓글 추천 */\r\n");
      out.write("    function level2Like(item, item2){\r\n");
      out.write(" \t\r\n");
      out.write(" \t\tvar commentNo = item;\r\n");
      out.write(" \t\tvar commentLikeAmount = item2;\r\n");
      out.write(" \t\t\r\n");
      out.write(" \r\n");
      out.write(" \t\tvar ajax_last_num = 0;\r\n");
      out.write(" \t\tvar current_ajax_num = ajax_last_num;\r\n");
      out.write(" \t\tvar check = true;\r\n");
      out.write(" \t\t$(\".level2Like\").on({\r\n");
      out.write("    \t\r\n");
      out.write(" \t\t\tclick:function(){\r\n");
      out.write(" \t\t\t\tvar no = $(this).attr(\"no\");\r\n");
      out.write("\t\t\t\tvar clickCnt = $(this).attr(\"clickNum\");\r\n");
      out.write("\t\t\t\tconsole.log(\"clickCnt= \"+clickCnt);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write(" \t\t\t\tif(clickCnt==1 && check==true){\r\n");
      out.write(" \t\t\t\t\talert(\"추천은 한번만 클릭할 수 있습니다.\");\r\n");
      out.write(" \t\t\t\t\tcheck = false;\r\n");
      out.write(" \t\t\t\t\tconsole.log(\"check= \"+check);\r\n");
      out.write(" \t\t\t\t\treturn;\r\n");
      out.write(" \t\t\t\t}\r\n");
      out.write(" \t\t\t\t\r\n");
      out.write(" \t \t\t   $.ajax({\r\n");
      out.write(" \t  \t           url:\"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveBoardComment1Like.do\",\r\n");
      out.write(" \t  \t           data:{commentNo : commentNo, commentLikeAmount : commentLikeAmount},\r\n");
      out.write(" \t  \t           beforeSend:function(){\r\n");
      out.write(" \t  \t        \t ajax_last_num = ajax_last_num  + 1;\r\n");
      out.write(" \t  \t        \t \r\n");
      out.write(" \t  \t           },\r\n");
      out.write(" \t  \t           success:function(data){\r\n");
      out.write(" \t  \t        \t   if(current_ajax_num == ajax_last_num-1) {\r\n");
      out.write(" \t  \t        \t\t\tconsole.log(data);\r\n");
      out.write(" \t \t  \t        \t    $(\".level2Like[no=\"+no+\"]\").html(\"추천 \"+data);  \r\n");
      out.write(" \t  \t        \t   }\r\n");
      out.write(" \t  \t        \t\t$(\".level2Like[no=\"+no+\"]\").attr(\"clickNum\", 1);\r\n");
      out.write(" \t  \t           }\r\n");
      out.write(" \t  \t           \r\n");
      out.write(" \t  \t    \t}); //에이젝스\r\n");
      out.write(" \t\t\t}\r\n");
      out.write(" \t\t\r\n");
      out.write("    \t });\r\n");
      out.write(" \t}\r\n");
      out.write(" \t/* 대댓글 비추천 */\r\n");
      out.write(" \tfunction level2Dislike(item, item2){\r\n");
      out.write(" \t\tvar commentNo = item;\r\n");
      out.write(" \t\tvar commentDislikeAmount = item2;\r\n");
      out.write(" \t\tvar ajax_last_num = 0;\r\n");
      out.write(" \t\tvar current_ajax_num = ajax_last_num;\r\n");
      out.write("\t\t\r\n");
      out.write(" \t\t$(\".level2Dislike\").on({\r\n");
      out.write(" \t\t\t    \r\n");
      out.write("    \t    \r\n");
      out.write(" \t\t\tclick:function(){\r\n");
      out.write(" \t\t\t\tvar no = $(this).attr(\"no\");\r\n");
      out.write(" \t \t\t\t//console.log(\"no=모야\"+no);\r\n");
      out.write(" \t \t\t   $.ajax({\r\n");
      out.write(" \t  \t           url:\"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveBoardComment1Dislike.do\",\r\n");
      out.write(" \t  \t           data:{commentNo : commentNo, commentDislikeAmount : commentDislikeAmount},\r\n");
      out.write(" \t  \t           beforeSend:function(){\r\n");
      out.write("\t  \t        \t ajax_last_num = ajax_last_num  + 1;\r\n");
      out.write("\t  \t        \t \r\n");
      out.write("\t  \t           },\r\n");
      out.write(" \t  \t           success:function(data){\r\n");
      out.write(" \t  \t        \t\tif(current_ajax_num == ajax_last_num-1) {\r\n");
      out.write("\t  \t        \t\t\tconsole.log(data);\r\n");
      out.write("\t  \t        \t\t\t $(\".level2Dislike[no=\"+no+\"]\").html(\"비추천 \"+data); \r\n");
      out.write("\t  \t        \t   }\r\n");
      out.write(" \t  \t        \t   \r\n");
      out.write(" \t  \t           }\r\n");
      out.write(" \t  \t           \r\n");
      out.write(" \t  \t    \t});\r\n");
      out.write(" \t\t\t}\r\n");
      out.write(" \t\t\r\n");
      out.write("  \t    \r\n");
      out.write("    \t });\r\n");
      out.write(" \t}\r\n");
      out.write(" /* 글 추천 */\r\n");
      out.write("    function likey(item){\r\n");
      out.write("       var postNo =  $(\"#postNo\").val(); \r\n");
      out.write("       var writer = $(\".writer\").text().trim();\r\n");
      out.write("       if(!confirm(\"해당 글을 추천하시겠습니까?\")){\r\n");
      out.write("          return;\r\n");
      out.write("       } \r\n");
      out.write("       \r\n");
      out.write("       if(writer==\"");
      out.print(loggedInMember.getUserId());
      out.write("\"){\r\n");
      out.write("\t\t   alert(\"자신의 글은 추천하실 수 없습니다.\");\r\n");
      out.write("\t\t   return;\r\n");
      out.write("\t   }\r\n");
      out.write("         \r\n");
      out.write("        $.ajax({\r\n");
      out.write("           url:\"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveBoardLike.do\",\r\n");
      out.write("           data:{postNo:postNo, likey:item},\r\n");
      out.write("           success:function(data){\r\n");
      out.write("              $(\"#like\").html(data);\r\n");
      out.write("           }\r\n");
      out.write("        });  \r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("/* 글 비추천  */  \r\n");
      out.write("    function disLikey(item){\r\n");
      out.write("       var postNo =  $(\"#postNo\").val(); \r\n");
      out.write("       var writer = $(\".writer\").text().trim();\r\n");
      out.write("\r\n");
      out.write("       \r\n");
      out.write("       if(!confirm(\"해당 글을 비추천하시겠습니까?\")){\r\n");
      out.write("          return;\r\n");
      out.write("       } \r\n");
      out.write("        \r\n");
      out.write("       if(writer==\"");
      out.print(loggedInMember.getUserId());
      out.write("\"){\r\n");
      out.write("\t\t   alert(\"자신의 글은 비추천하실 수 없습니다.\");\r\n");
      out.write("\t\t   return;\r\n");
      out.write("\t   }\r\n");
      out.write("       \r\n");
      out.write("          $.ajax({\r\n");
      out.write("              url:\"");
      out.print(request.getContextPath());
      out.write("/board/solve/solveDisike.do\",\r\n");
      out.write("              data:{postNo:postNo, dislikey:item},\r\n");
      out.write("              success:function(data){\r\n");
      out.write("                 $(\"#dislike\").html(data);\r\n");
      out.write("                 \r\n");
      out.write("              }\r\n");
      out.write("              \r\n");
      out.write("           });\r\n");
      out.write("       \r\n");
      out.write("          console.log(flag);\r\n");
      out.write("    }\r\n");
      out.write("       \r\n");
      out.write("  \r\n");
      out.write("   \r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
