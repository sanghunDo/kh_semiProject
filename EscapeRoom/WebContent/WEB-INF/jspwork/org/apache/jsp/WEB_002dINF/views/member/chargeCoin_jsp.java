/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2019-01-17 07:33:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chargeCoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String userId = request.getParameter("userId");
	System.out.println("userId@chargeCoin.jsp=" + userId);

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<title>코인 충전</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdn.iamport.kr/js/iamport.payment-1.1.5.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.3.1.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/member/chargeCoin.css\" />\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Roboto+Slab\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Noto+Serif+KR\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Amatic+SC\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"logo\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/home'\">Escape, if you can.</div>\r\n");
      out.write("\t<div id=\"chargeCoin-Container\">\r\n");
      out.write("\t\t<h2>&lt; 코인 충전 &gt;</h2>\r\n");
      out.write("\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/member/chargeCoinEnd\"\r\n");
      out.write("\t\t\tname=\"chargeCoinFrm\" id=\"chargeCoinFrm\" method=\"post\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"userId\" id=\"userId\" value=");
      out.print(userId);
      out.write(" />\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" name=\"coin_\" id=\"1000\" value=1000 productName=\"100코인 충전\" checked />\r\n");
      out.write("\t\t\t\t\t\t<label for=\"1000\" class=\"coinLabel\">100 코인 충전</label>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" name=\"coin_\" id=\"3000\" value=3000 productName=\"300코인 충전\"/>\r\n");
      out.write("\t\t\t\t\t\t<label for=\"3000\" class=\"coinLabel\">300 코인 충전</label>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" name=\"coin_\" id=\"5000\" value=5000 productName=\"500코인 충전\" />\r\n");
      out.write("\t\t\t\t\t\t<label for=\"5000\" class=\"coinLabel\">500 코인 충전</label>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" name=\"coin_\" id=\"7000\" value=7000 productName=\"700코인 충전\" />\r\n");
      out.write("\t\t\t\t\t\t<label for=\"7000\" class=\"coinLabel\">700 코인 충전</label>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" name=\"coin_\" id=\"10000\" value=10000 productName=\"1,000코인 충전\" />\r\n");
      out.write("\t\t\t\t\t\t<label for=\"10000\" class=\"coinLabel\">1,000 코인 충전</label>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t\t<button id=\"check_module\" type=\"button\">결제하기</button>\r\n");
      out.write("\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t$(\"#check_module\").click(function() {\r\n");
      out.write("        var IMP = window.IMP; // 생략가능\r\n");
      out.write("        var radioVal = $('input[name=\"coin_\"]:checked').val();\r\n");
      out.write("        var productName = $('input[name=\"coin_\"]:checked').attr(\"productName\");\r\n");
      out.write("        IMP.init('imp92461404'); // 부여받은 \"가맹점 식별코드\"를 사용\r\n");
      out.write("        IMP.request_pay({\r\n");
      out.write("           pg : 'html_5inicis', // version 1.1.0부터 지원. html5_inicis':이니시스(웹표준결제)\r\n");
      out.write("           pay_method : 'card', // 'card':신용카드, \r\n");
      out.write("           merchant_uid : 'EscapeRoom_' + new Date().getTime(),\r\n");
      out.write("           name : productName, //결제창에서 보여질 이름\r\n");
      out.write("           amount : radioVal, //가격 \r\n");
      out.write("           buyer_email : '', // 구매자 이메일\r\n");
      out.write("           // 구매자명\t\r\n");
      out.write("           buyer_name : '");
      out.print(userId);
      out.write("', \r\n");
      out.write("           buyer_tel : '' // 구매자 연락처\r\n");
      out.write("        }, function(rsp) {\r\n");
      out.write("           if (rsp.success) {\r\n");
      out.write("              var msg = '결제가 완료되었습니다.';\r\n");
      out.write("              \r\n");
      out.write("              msg += '고유ID : ' + rsp.imp_uid;\r\n");
      out.write("              msg += '상점 거래ID : ' + rsp.merchant_uid;\r\n");
      out.write("              msg += '결제 금액 : ' + rsp.paid_amount;\r\n");
      out.write("              msg += '카드 승인번호 : ' + rsp.apply_num;\r\n");
      out.write("        \t  location.href =\"");
      out.print(request.getContextPath());
      out.write("/member/chargeCoinEnd?userId=");
      out.print(userId);
      out.write("&coin=\"+radioVal;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("           } else {\r\n");
      out.write("              var msg = '결제에 실패하였습니다.';\r\n");
      out.write("              msg += '에러내용 : ' + rsp.error_msg;\r\n");
      out.write("\t          alert(msg);\r\n");
      out.write("           }\r\n");
      out.write("        });\r\n");
      out.write("     });\r\n");
      out.write("\t</script>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
