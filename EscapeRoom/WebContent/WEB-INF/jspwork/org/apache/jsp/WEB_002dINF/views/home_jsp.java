/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2019-01-08 10:24:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import semi.member.model.vo.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1546943086099L));
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1546941154724L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("semi.member.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
 
	Member loggedInMember = (Member)session.getAttribute("loggedInMember"); 

      out.write("\r\n");
      out.write("<!DOCTYPE>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>You Can't Escape..</title>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Roboto+Slab\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Amatic+SC\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/common/header.css\" />\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.3.1.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<div id=\"top\">\r\n");
      out.write("\t\t\t<div id=\"myMenu\">\r\n");
      out.write("\t\t\t");
if(loggedInMember == null) {
      out.write("\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/login\">LOGIN</a>\r\n");
      out.write("\t\t\t");
}else{ 
      out.write("\r\n");
      out.write("\t\t\t\t");
if("admin".equals(loggedInMember.getUserId())){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/adminView\">ADMIN</a>\r\n");
      out.write("\t\t\t\t\t&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/memberView?userId=");
      out.print(loggedInMember.getUserId());
      out.write("\">MY PAGE</a>\r\n");
      out.write("                \t&nbsp;&nbsp;\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/logout\">LOGOUT</a>\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"logo\">Escape, if you can.</div>\r\n");
      out.write("\t\t<div id=\"menu\">\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/home\">HOME</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/notice\">NOTICE</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/rank\">RANKING</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">SOLVE</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/board/free/freeBoardList\">FREE</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"game-start\">\r\n");
      out.write("\t\t\t<button class=\"enter-game\">ENTER GAME</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(\".enter-game\").click(function(){\r\n");
      out.write("\t\t\t//게임화면 팝업\r\n");
      out.write("\t\t\tvar url = \"");
      out.print(request.getContextPath());
      out.write("/game/gameStart?userId=");
      out.print(loggedInMember!=null?loggedInMember.getUserId():"guest");
      out.write("\";\r\n");
      out.write(" \t\t\tvar status = \"width=1024px, height=678px\";\r\n");
      out.write("\t\t\topen(url, \"\", status);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>");
      out.write("\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Noto+Serif+KR\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("#main-Container{\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\tmin-height:100px;\r\n");
      out.write("\tmargin-top:20px;\r\n");
      out.write("\tfont-family:'Noto Serif KR', serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1{\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h2{\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("\tmargin:0;\r\n");
      out.write("\tmargin-bottom:15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#notice-Link{\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\theight:30px;\r\n");
      out.write("\toverflow:hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#ani-Text{\r\n");
      out.write("\tposition:relative;\r\n");
      out.write("\tcolor:red;\r\n");
      out.write("\tmargin:0;\r\n");
      out.write("\tleft:1030px;\r\n");
      out.write("\tcursor:pointer;\r\n");
      out.write("\tanimation-name:notice-Link_Ani;\r\n");
      out.write("\tanimation-iteration-count:infinite;\r\n");
      out.write("\tanimation-timing-function:linear;\r\n");
      out.write("\tanimation-duration:17s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@keyframes notice-Link_Ani{\r\n");
      out.write("\t0%{\r\n");
      out.write("\t\tleft:1030px;\r\n");
      out.write("\t}\r\n");
      out.write("\t100%{\r\n");
      out.write("\t\tleft:-1000px;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#rank-One{\r\n");
      out.write("\twidth:600px;\r\n");
      out.write("\theight:350px;\r\n");
      out.write("\tmargin:0 auto;\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("\tmargin-bottom:30px;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#medal-Img{\r\n");
      out.write("\twidth:150px;\r\n");
      out.write("\theight:250px;\r\n");
      out.write("\tdisplay:inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#rank-One_Info{\r\n");
      out.write("\tposition:relative;\r\n");
      out.write("\tborder:1px solid white;\r\n");
      out.write("\twidth:300px;\r\n");
      out.write("\theight:250px;\r\n");
      out.write("\ttop:3px;\r\n");
      out.write("\tdisplay:inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#posts{\r\n");
      out.write("\twidth:950px;\r\n");
      out.write("\tmin-height:100px;\r\n");
      out.write("\tmargin:0 auto;\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#temp-Container{\r\n");
      out.write("\tborder:3px solid gold;\r\n");
      out.write("\tborder-radius:10px;\r\n");
      out.write("\twidth:500px;\r\n");
      out.write("\tmargin:0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table{\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("\tborder-collapse:collapse;\r\n");
      out.write("\tmargin-bottom:30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table th{\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("\tpadding:5px;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("\tborder-bottom:1px solid white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table td{\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("\tpadding:5px;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#admin-Container{\r\n");
      out.write("\ttext-align:right;\r\n");
      out.write("\tmargin-bottom:5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#admin-Btn{\r\n");
      out.write("\tborder:1px solid white;\r\n");
      out.write("\tborder-radius:5px;\r\n");
      out.write("\tbackground:black;\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<div id=\"main-Container\">\r\n");
      out.write("\t<div id=\"admin-Container\">\r\n");
      out.write("\t\t<button id=\"admin-Btn\">홈 화면 편집하기</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"notice-Link\">\r\n");
      out.write("\t\t<h3 id=\"ani-Text\">&lt;공지사항&gt; 런칭기념 가입시 300코인 무료증정 이벤트 진행중 !!</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"rank-One\">\r\n");
      out.write("\t\t<h1>☆★ 금주 랭킹 1위 ★☆</h1>\r\n");
      out.write("\t\t<div id=\"temp-Container\">\r\n");
      out.write("\t\t\t<img id=\"medal-Img\" src=\"");
      out.print(request.getContextPath());
      out.write("/images/home/gold_medal.png\" alt=\"\" />\r\n");
      out.write("\t\t\t<div id=\"rank-One_Info\">\r\n");
      out.write("\t\t\t\t<!-- <span id=\"number1\">tempName12</span>\r\n");
      out.write("\t\t\t\t<span>클리어 시간 : 23분</span> -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"posts\">\r\n");
      out.write("\t\t<h2>인기 게시물</h2>\r\n");
      out.write("\t\t<table id=\"board-Free\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>글번호</th>\r\n");
      out.write("\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t<th>글쓴이</th>\r\n");
      out.write("\t\t\t\t<th>날짜</th>\r\n");
      out.write("\t\t\t\t<th>추천수</th>\r\n");
      out.write("\t\t\t\t<th>조회수</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<table id=\"board-Solve\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>글번호</th>\r\n");
      out.write("\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t<th>글쓴이</th>\r\n");
      out.write("\t\t\t\t<th>날짜</th>\r\n");
      out.write("\t\t\t\t<th>추천수</th>\r\n");
      out.write("\t\t\t\t<th>조회수</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t\t<td>테스트</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/common/footer.css\" />\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Noto+Serif+KR\" rel=\"stylesheet\">\r\n");
      out.write(" </section>\r\n");
      out.write("      <footer>\r\n");
      out.write("         <p>&lt;Copyright 2019. <strong>ESCAPE, IF YOU CAN.</strong> All rights reserved.&gt;</p>\r\n");
      out.write("      </footer>\r\n");
      out.write("   </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
