/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2019-01-09 07:14:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.game;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class gameMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.3.1.js\"></script>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Noto+Serif+KR\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/game/gameMain.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<img src=\"");
      out.print(request.getContextPath() );
      out.write("/images/game/gameMain/game_start_again.jpeg\" alt=\"\" id=\"back-ground\"/>\r\n");
      out.write("<div id=\"wrap\">\r\n");
      out.write("\t<input type=\"hidden\" value=0 />\r\n");
      out.write("\t<div id=\"pause-menu-container\">\r\n");
      out.write("\t\t<div id=\"pause-menu\">\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li><h3>플레이 시간</h3><span id=\"time\"></span></li>\r\n");
      out.write("\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t    <div class=\"button_base b06_3d_swap\">\r\n");
      out.write("\t\t\t\t        <div>상점</div>\r\n");
      out.write("\t\t\t\t        <div>상점</div>\r\n");
      out.write("\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t<div class=\"button_base b06_3d_swap\">\r\n");
      out.write("\t\t\t\t        <div>도움말</div>\r\n");
      out.write("\t\t\t\t        <div>도움말</div>\r\n");
      out.write("\t\t\t\t    </div></li>\r\n");
      out.write("\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t<div class=\"button_base b06_3d_swap\">\r\n");
      out.write("\t\t\t\t        <div>게임종료</div>\r\n");
      out.write("\t\t\t\t        <div>게임종료</div>\r\n");
      out.write("\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"pause\"><img src=\"");
      out.print(request.getContextPath() );
      out.write("/images/game/gameMain/pause.png\" alt=\"\" /></div>\r\n");
      out.write("\t<div id=\"inventory\">\r\n");
      out.write("\t\t<div id=\"prev\"><span>◀</span></div>\r\n");
      out.write("\t\t<div id=\"next\"><span>▶</span></div>\r\n");
      out.write("\t\t<div id=\"obj-list-container\">\r\n");
      out.write("\t\t\t<div id=\"obj-list\">\r\n");
      out.write("\t\t\t\t<div id=\"obj1\"></div>\r\n");
      out.write("\t\t\t\t<div id=\"obj2\"></div>\r\n");
      out.write("\t\t\t\t<div id=\"obj3\"></div>\r\n");
      out.write("\t\t\t\t<div id=\"obj4\"></div>\r\n");
      out.write("\t\t\t\t<div id=\"obj5\"></div>\r\n");
      out.write("\t\t\t\t<div id=\"obj6\"></div>\r\n");
      out.write("\t\t\t\t<div id=\"obj7\"></div>\r\n");
      out.write("\t\t\t\t<div id=\"obj8\"></div>\r\n");
      out.write("\t\t\t\t<div id=\"obj9\"></div>\r\n");
      out.write("\t\t\t\t<div id=\"obj10\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("var record = setInterval(timer, 1000);\r\n");
      out.write("function timer(){\r\n");
      out.write("\tvar sec = $(\"[type=hidden]\").val();\r\n");
      out.write("\t$(\"[type=hidden]\").val(++sec);\r\n");
      out.write("};\r\n");
      out.write("$(\"#back-ground\").fadeOut(2000);\r\n");
      out.write("setTimeout(function(){\r\n");
      out.write("\t$(\"#back-ground\").attr(\"src\", \"");
      out.print(request.getContextPath());
      out.write("/images/game/gameMain/test.png\").show();\r\n");
      out.write("\t$(\"#wrap\").show();\r\n");
      out.write("}, 2500);\r\n");
      out.write("\r\n");
      out.write("$(\"#next\").click(function(e){\r\n");
      out.write("\t$(this).css(\"visibility\", \"hidden\").siblings(\"#prev\").css(\"visibility\", \"visible\");\r\n");
      out.write("\t$(\"#obj-list\").animate({\"left\":\"-100%\"});\r\n");
      out.write("});\r\n");
      out.write("$(\"#prev\").click(function(){\r\n");
      out.write("\t$(this).css(\"visibility\", \"hidden\").siblings(\"#next\").css(\"visibility\", \"visible\");\r\n");
      out.write("\t$(\"#obj-list\").animate({\"left\":0});\r\n");
      out.write("});\r\n");
      out.write("$(\"#inventory\").on('click',{flag:0},function(e){\r\n");
      out.write("\tvar cnt = e.data.flag++;\r\n");
      out.write("\tif(cnt%2==0) $(this).animate({\"top\":\"80%\"});\r\n");
      out.write("\telse $(this).animate({\"top\":\"100%\"});\r\n");
      out.write("\t$(this).toggleClass('on');\r\n");
      out.write("\t$(this).children().click(function(e){\r\n");
      out.write("\t\te.stopPropagation();\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("$(\"#pause\").on(\"click\", {flag:1}, function(e){\r\n");
      out.write("\tvar cnt = e.data.flag++;\r\n");
      out.write("\t$(\"#back-ground\").toggleClass(\"paused\");\r\n");
      out.write("\tif(cnt%2!=0){\r\n");
      out.write("\t\t$(this).children().attr(\"src\", \"");
      out.print(request.getContextPath());
      out.write("/images/game/gameMain/play.png\");\r\n");
      out.write("\t\t$(\"#pause-menu-container\").show();\r\n");
      out.write("\t\tclearInterval(record);\r\n");
      out.write("\t\tvar time = $(\"[type=hidden]\").val();\r\n");
      out.write("\t\tvar h = Math.floor(time/3600);\r\n");
      out.write("\t\tvar m = Math.floor((time%3600)/60);\r\n");
      out.write("\t\tvar s = (time%3600)%60;\r\n");
      out.write("\t\t$(\"#time\").text(h+\"시간 \"+m+\"분 \"+s+\"초\");\r\n");
      out.write("\t}\r\n");
      out.write("\telse{\r\n");
      out.write("\t\t$(this).children().attr(\"src\", \"");
      out.print(request.getContextPath());
      out.write("/images/game/gameMain/pause.png\");\r\n");
      out.write("\t\t$(\"#pause-menu-container\").hide();\r\n");
      out.write("\t\trecord = setInterval(timer, 1000);\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
