/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2019-01-13 15:21:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.game;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import semi.member.model.vo.*;

public final class gameController_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("semi.member.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	Member loggedInMember = (Member)session.getAttribute("loggedInMember");
	String userId = (String)request.getAttribute("userId");

      out.write("\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.3.1.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("var position = $(\"#background img\").prop(\"id\");\r\n");
      out.write("$(function(){\r\n");
      out.write("\tsetObject();\r\n");
      out.write("})\r\n");
      out.write("function setObject(){\r\n");
      out.write("\tvar position = $(\"#background img\").prop(\"id\");\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/game/setObject\",\r\n");
      out.write("\t\ttype: \"get\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\tfor(var i in data){\r\n");
      out.write("\t\t\t\tvar obj = data[i];\r\n");
      out.write("\t\t\t\tif(obj.position==position&&obj.objLevel==1){\r\n");
      out.write("\t\t\t\t\tvar html = \"<img src='");
      out.print(request.getContextPath());
      out.write("/images/game/gameMain/\"+position+\"/\"+obj.objName+\".png' id='\"+obj.objName+\"' class='obj'/>\";\r\n");
      out.write("\t\t\t\t\t$(\"#background\").append(html);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tobj_click();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("};\r\n");
      out.write("function obj_click(){\r\n");
      out.write("\t$(\"#background>img\").not(\":first\").each(function(){\r\n");
      out.write("\t\tvar objName = $(this).prop(\"id\");\r\n");
      out.write("\t\t$(this).on('click', function(){\r\n");
      out.write("\t\t\tshow_coment(objName, 1);\r\n");
      out.write("\t\t\t$(\"#wrap\").addClass(\"paused\");\r\n");
      out.write("\t\t\t$(\"#wrap\").after(\"<img src='");
      out.print(request.getContextPath());
      out.write("/images/game/gameMain/clicked/\"+objName+\"_clicked.png' id='clicked' onclick='obj_reClick(\"+objName+\");'/>\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("};\r\n");
      out.write("function play(){\r\n");
      out.write("\t$(\"#coment\").hide();\r\n");
      out.write("\t$(\"[id*=clicked]\").next().remove();\r\n");
      out.write("\t$(\"[id*=clicked]\").remove();\r\n");
      out.write("\t$(\"#wrap\").removeClass(\"paused\");\r\n");
      out.write("};\r\n");
      out.write("function obj_reClick(obj){\r\n");
      out.write("\tvar objName = $(obj).prop(\"id\");\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/game/setObject\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\tfor(var i in data){\r\n");
      out.write("\t\t\t\tif(data[i].objName==objName){\r\n");
      out.write("\t\t\t\t\tif(data[i].secondName!=\"\"){\r\n");
      out.write("\t\t\t\t\t\t$(\"#clicked\").attr(\"src\", \"");
      out.print(request.getContextPath());
      out.write("/images/game/gameMain/\"+position+\"/\"+data[i].secondName+\".png\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#clicked\").attr(\"onclick\", \"obj_re_reClick('\"+objName+\"')\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#clicked\").attr(\"id\", data[i].secondName+\"_clicked\");\r\n");
      out.write("\t\t\t\t\t\tshow_coment(objName, 2);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse{play()}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("};\r\n");
      out.write("function obj_re_reClick(objName){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/game/setObject\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\tvar $target = $(\"[id*=clicked]\");\r\n");
      out.write("\t\t\tfor(var i in data){\r\n");
      out.write("\t\t\t\tif(data[i].objName==objName){\r\n");
      out.write("\t\t\t\t\tif(data[i].thirdName!=\"\"){\r\n");
      out.write("\t\t\t\t\t\tshow_coment(objName, 3);\r\n");
      out.write("\t\t\t\t\t\t$target.attr(\"src\", \"");
      out.print(request.getContextPath());
      out.write("/images/game/gameMain/\"+position+\"/\"+data[i].thirdName+\".png\");\r\n");
      out.write("\t\t\t\t\t\t$target.attr(\"onclick\", \"obj_isLast('\"+data[i].thirdName+\"')\");\r\n");
      out.write("\t\t\t\t\t\t$target.attr(\"id\", data[i].thirdName+\"_clicked\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tvar child = find_child(data[i].objName);\r\n");
      out.write("\t\t\t\t\t\tif(child!=\"\"){\r\n");
      out.write("\t\t\t\t\t\t\tvar html = \"<img src='");
      out.print(request.getContextPath());
      out.write("/images/game/gameMain/left/\"+child+\".png' id='\"+child+\"' class='obj'/>\";\r\n");
      out.write("\t\t\t\t\t\t\t$target.after(html);\r\n");
      out.write("\t\t\t\t\t\t\tget_item(child);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse{play()}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("};\r\n");
      out.write("function obj_isLast(objName){\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/game/setObject\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdataType:\"json\",\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\tfor(var i in data){\r\n");
      out.write("\t\t\t\tif(objName.indexOf(data[i].thirdName)!=-1){\r\n");
      out.write("\t\t\t\t\tplay();\r\n");
      out.write("\t\t\t\t}\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("};\r\n");
      out.write("function find_child(objName){\r\n");
      out.write("\tvar child = \"\";\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/game/getObject\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tasync: false,\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\tfor(var i in data){\r\n");
      out.write("\t\t\t\tif(data[i].parentName==objName){\r\n");
      out.write("\t\t\t\t\tchild = data[i].objName;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\treturn child;\r\n");
      out.write("};\r\n");
      out.write("function update_state(objName, flag){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl: \"");
      out.print(request.getContextPath());
      out.write("/game/updateState\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdata: {\"objName\":objName, \"flag\":flag, \"userId\":userId}\r\n");
      out.write("\t});\r\n");
      out.write("};\r\n");
      out.write("function get_item(itemName){\r\n");
      out.write("\t$(\"[id*=clicked]\").next().on('click', function(){\r\n");
      out.write("\t\tvar $target = $(this);\r\n");
      out.write("\t\t$(\"[id*=clicked]\").attr(\"src\", \"");
      out.print(request.getContextPath());
      out.write("/images/game/gameMain/clicked/\"+itemName+\"_clicked.png\");\r\n");
      out.write("\t\tshow_coment(itemName, 1);\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/game/getObject\",\r\n");
      out.write("\t\t\ttype: \"post\",\r\n");
      out.write("\t\t\tdataType: \"json\",\r\n");
      out.write("\t\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t\tfor(var i in data){\r\n");
      out.write("\t\t\t\t\tif($target.prop(\"id\")==data[i].objName){\r\n");
      out.write("\t\t\t\t\t\tif(data[i].isItem==\"Y \"){\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#obj1\").html($target.clone().removeClass(\"obj\"));\r\n");
      out.write("\t\t\t\t\t\t\t$target.remove();\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#\"+data[i].parentName).remove();\r\n");
      out.write("\t\t\t\t\t\t\tupdate_state(itemName, \"get\");\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("};\r\n");
      out.write("function show_coment(objName, rnum){\r\n");
      out.write("\tvar coment = \"\";\r\n");
      out.write("\tvar target = $(\"#coment h2\");\r\n");
      out.write("\ttarget.removeAttr(\"style\");\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/game/getComent\",\r\n");
      out.write("\t\ttype:\"post\",\r\n");
      out.write("\t\tdata:{\"objName\":objName,\"rnum\":rnum},\r\n");
      out.write("\t\tdataType:\"json\",\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t$(\"#coment\").show();\r\n");
      out.write("\t\t\ttarget.text(data);\r\n");
      out.write("\t\t\ttarget.parent().css(\"width\",target.outerWidth());\r\n");
      out.write("\t\t\tvar length = data.length;\r\n");
      out.write("\t\t\ttarget.attr(\"style\", \"animation:typing \"+(length/40)+\"s steps(\"+length+\", end)\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("};\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
